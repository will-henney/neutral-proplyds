* Measuring [O I] 6300 flux from HST images of proplyds

** Initial description for Tom and Giulia
Craft document
+ [[shell:open 'craftdocs://open?blockId=b988d13e-945f-dbb2-d3b2-481510def473&spaceId=ebf58611-71d2-f72d-500b-350bfc7b0451'][Link to open in app]]
+ [[https://www.craft.do/s/aM03PvVnYpJYVW][Link to public web page]]


** What files are we using?

*** PC mosaic
- Files in [[file:../../JorgeBowshocks/HST/]]
  - ~wcs_GO5469PCf656e_sharp_16.fits~ for Ha
  - Similarly f631e, f547e, f673e
  - WCS adjustments in
    - [[file:../pc-mosaic-f547m-LV456.wcs]]
    - etc
      
*** WFC mosaic
- Files in [[file:../../../Work/BobPC/2002/]]
  - ~final673-radec_sharp_16.fits~, etc
  - These still need a bit of work on the alignment
** Method for measuring fluxes
- We need to isolate the emission from
  - the disk and neutral wind
  - the ionization front
  - the star
- For this, we use the following bands
  - F631N  which is mainly oi, from i-front and disk, but also some
  - F656N  which is mainly Ha from i-front, with very little stellar continuum
  - F547M which is mainly stellar continuum, with a bit of nebular continuum
  - F673N which is sii from i-front (weak) plus stellar continuum
- We can plot profiles vs radius from proplyd center (star if seen)
  - Then subtract off the stellar profile and the i-front profile to get the disk flow contribution
  - At least, in theory 
** How to calculate the profiles
1. Find the radius and PA of all pixels with respect to the proplyd
2. Define an orientation PA0 for the proplyd
   - either the PA  to th1C
   - or a value defined by hand
3. plot brightness versus radius for all pixels within +/- 90 deg of PA0
4. Make some routines in whispy to do this
   - whispy
   -
** Get aligned versions of the PC mosaics
#+begin_src python :results output
  from pathlib import Path
  from astropy.wcs import WCS
  from astropy.io import fits

  inpath = Path.home() / "Dropbox/JorgeBowshocks/HST"

  hdu = fits.open(inpath / "wcs_GO5469PCf656e_sharp_16.fits")[0]

  w = WCS(hdu)
  print(w)
#+end_src

#+RESULTS:
: WCS Keywords
: 
: Number of WCS axes: 2
: CTYPE : 'RA---TAN'  'DEC--TAN'  
: CRVAL : 83.82214183333333  -5.394832672222222  
: CRPIX : 811.0  987.0  
: CD1_1 CD1_2  : 8.959642e-06  8.79584e-06  
: CD2_1 CD2_2  : 8.79584e-06  -8.959642e-06  
: NAXIS : 1320  2060
*** DONE Easy method - use the WCS shifts we already have
CLOSED: [2022-05-26 Thu 08:33]

These are the WCS files I made when I did the alignment by hand

#+begin_src sh
grep CRPIX ../*.wcs
#+end_src

#+RESULTS:
| ../pc-mosaic-f547m-LV456.wcs:CRPIX1 | = | 810.7 |
| ../pc-mosaic-f547m-LV456.wcs:CRPIX2 | = | 987.3 |
| ../pc-mosaic-f656n-LV456.wcs:CRPIX1 | = |   811 |
| ../pc-mosaic-f656n-LV456.wcs:CRPIX2 | = | 987.5 |
| ../pc-mosaic-f658n-LV456.wcs:CRPIX1 | = | 810.5 |
| ../pc-mosaic-f658n-LV456.wcs:CRPIX2 | = | 987.5 |

Unfortunately, I cannot remember which ones I used for the 673 and 631 filters.  I will assume that they are the same as 547

#+name: wcs-crpix-pc
| f547m | 810.7 | 987.3 |
| f656n | 811.0 | 987.5 |
| f658n | 810.5 | 987.5 |
| f673n | 810.7 | 987.3 |
| f631n | 810.7 | 987.3 |

#+header: :var TAB=wcs-crpix-pc
#+begin_src python :results output
  from pathlib import Path
  from astropy.wcs import WCS
  from astropy.io import fits

  inpath = Path.home() / "Dropbox/JorgeBowshocks/HST"
  outpath = Path.cwd().parent / "data"

  for suff in "smooth", "sharp":
      for f, istring, jstring in TAB:
          hdu = fits.open(inpath / f"wcs_GO5469PC{f[:-1]}e_{suff}_16.fits")[0]
          hdu.header["CRPIX1"] = float(istring)
          hdu.header["CRPIX2"] = float(jstring)
          hdu.writeto(outpath / f"pcmos-{f}_{suff}_16.fits", overwrite=True)


#+end_src

#+RESULTS:

*** Harder method - do source detection and loo for the average shift



  


**** Find the sources in the images
+ For the ground truth we will use the Robberto 2005 data
+ I have copied the source identification script over to [[file:../scripts/find-sources.py]]
+ Trial run with the F631N filter to start with

#+begin_src sh :dir ../data :results verbatim
  python ../scripts/find-sources.py pcmos-f631n_sharp_16.fits 4.0 5.0
#+end_src

#+RESULTS:
: Source list saved to pcmos-f631n_sharp_16-sources-fwhm4.0-thresh5.ecsv
: Region file saved to pcmos-f631n_sharp_16-sources-fwhm4.0-thresh5.reg

+ Repeat for the other filters
#+begin_src sh :dir ../data :results verbatim
  for f in 547m 656n 658n 673n; do 
      python ../scripts/find-sources.py pcmos-f${f}_sharp_16.fits 4.0 5.0
  done
#+end_src

#+RESULTS:
: Source list saved to pcmos-f547m_sharp_16-sources-fwhm4.0-thresh5.ecsv
: Region file saved to pcmos-f547m_sharp_16-sources-fwhm4.0-thresh5.reg
: Source list saved to pcmos-f656n_sharp_16-sources-fwhm4.0-thresh5.ecsv
: Region file saved to pcmos-f656n_sharp_16-sources-fwhm4.0-thresh5.reg
: Source list saved to pcmos-f658n_sharp_16-sources-fwhm4.0-thresh5.ecsv
: Region file saved to pcmos-f658n_sharp_16-sources-fwhm4.0-thresh5.reg
: Source list saved to pcmos-f673n_sharp_16-sources-fwhm4.0-thresh5.ecsv
: Region file saved to pcmos-f673n_sharp_16-sources-fwhm4.0-thresh5.reg

**** Inspect the sources in DS9
- They are sort of OK, but the ACS sources do not do a very good job for the proplyds

**** Match the sources

- I am going to try this in a notebook
- This is now done for f631n and it worked fine
  - See [[file:../notebooks/01-align-PC.py]]
- /BUT/ it turns out that the Ricci coordinates are not good enough, so I will have to set my own coordinates for each source
- However, I will go through the exercise for the remaining filters, since at least it will mean that the image alignment between filters will be correct
  
** Coordinates of the proplyds
- It turns out that the OW94 coordinates from SIMBAD are not quite accurate enough
- We could maybe use the Ricci coordinates instead
  - We can still use SIMBAD but using the ~[RRS2008]~ prefix instead
  - No, that does not work. It just uses the Ricci ID to identify the source, but  it 
