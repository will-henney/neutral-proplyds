* Measuring [O I] 6300 flux from HST images of proplyds

** Initial description for Tom and Giulia
Craft document
+ [[shell:open 'craftdocs://open?blockId=b988d13e-945f-dbb2-d3b2-481510def473&spaceId=ebf58611-71d2-f72d-500b-350bfc7b0451'][Link to open in app]]
+ [[https://www.craft.do/s/aM03PvVnYpJYVW][Link to public web page]]


** What files are we using?

*** PC mosaic
- Files in [[file:../../JorgeBowshocks/HST/]]
  - ~wcs_GO5469PCf656e_sharp_16.fits~ for Ha
  - Similarly f631e, f547e, f673e
  - WCS adjustments in
    - [[file:../pc-mosaic-f547m-LV456.wcs]]
    - etc
      
*** WFC mosaic
- Files in [[file:../../../Work/BobPC/2002/]]
  - ~final673-radec_sharp_16.fits~, etc
  - These still need a bit of work on the alignment
** Method for measuring fluxes
- We need to isolate the emission from
  - the disk and neutral wind
  - the ionization front
  - the star
- For this, we use the following bands
  - F631N  which is mainly oi, from i-front and disk, but also some
  - F656N  which is mainly Ha from i-front, with very little stellar continuum
  - F547M which is mainly stellar continuum, with a bit of nebular continuum
  - F673N which is sii from i-front (weak) plus stellar continuum
- We can plot profiles vs radius from proplyd center (star if seen)
  - Then subtract off the stellar profile and the i-front profile to get the disk flow contribution
  - At least, in theory 
** How to calculate the profiles
1. Find the radius and PA of all pixels with respect to the proplyd
2. Define an orientation PA0 for the proplyd
   - either the PA  to th1C
   - or a value defined by hand
3. plot brightness versus radius for all pixels within +/- 90 deg of PA0
4. Make some routines in whispy to do this
   - whispy
   -
** Get aligned versions of the PC mosaics
#+begin_src python :results output
  from pathlib import Path
  from astropy.wcs import WCS
  from astropy.io import fits

  inpath = Path.home() / "Dropbox/JorgeBowshocks/HST"

  hdu = fits.open(inpath / "wcs_GO5469PCf656e_sharp_16.fits")[0]

  w = WCS(hdu)
  print(w)
#+end_src

#+RESULTS:
: WCS Keywords
: 
: Number of WCS axes: 2
: CTYPE : 'RA---TAN'  'DEC--TAN'  
: CRVAL : 83.82214183333333  -5.394832672222222  
: CRPIX : 811.0  987.0  
: CD1_1 CD1_2  : 8.959642e-06  8.79584e-06  
: CD2_1 CD2_2  : 8.79584e-06  -8.959642e-06  
: NAXIS : 1320  2060
*** DONE Easy method - use the WCS shifts we already have
CLOSED: [2022-05-26 Thu 08:33]

These are the WCS files I made when I did the alignment by hand

#+begin_src sh
grep CRPIX ../*.wcs
#+end_src

#+RESULTS:
| ../pc-mosaic-f547m-LV456.wcs:CRPIX1 | = | 810.7 |
| ../pc-mosaic-f547m-LV456.wcs:CRPIX2 | = | 987.3 |
| ../pc-mosaic-f656n-LV456.wcs:CRPIX1 | = |   811 |
| ../pc-mosaic-f656n-LV456.wcs:CRPIX2 | = | 987.5 |
| ../pc-mosaic-f658n-LV456.wcs:CRPIX1 | = | 810.5 |
| ../pc-mosaic-f658n-LV456.wcs:CRPIX2 | = | 987.5 |

Unfortunately, I cannot remember which ones I used for the 673 and 631 filters.  I will assume that they are the same as 547

#+name: wcs-crpix-pc
| f547m | 810.7 | 987.3 |
| f656n | 811.0 | 987.5 |
| f658n | 810.5 | 987.5 |
| f673n | 810.7 | 987.3 |
| f631n | 810.7 | 987.3 |

#+header: :var TAB=wcs-crpix-pc
#+begin_src python :results output
  from pathlib import Path
  from astropy.wcs import WCS
  from astropy.io import fits

  inpath = Path.home() / "Dropbox/JorgeBowshocks/HST"
  outpath = Path.cwd().parent / "data"

  for suff in "smooth", "sharp":
      for f, istring, jstring in TAB:
          hdu = fits.open(inpath / f"wcs_GO5469PC{f[:-1]}e_{suff}_16.fits")[0]
          hdu.header["CRPIX1"] = float(istring)
          hdu.header["CRPIX2"] = float(jstring)
          hdu.writeto(outpath / f"pcmos-{f}_{suff}_16.fits", overwrite=True)


#+end_src

#+RESULTS:

*** DONE Harder method - do source detection and look for the average shift
CLOSED: [2022-05-31 Tue 09:21]
- It looks like this will be necessary after all
- I will try and use the methodology that I developed for the Multifrecuencia course
- I will start with the files that I already tweaked the WCS by hand in the previous section, mainly because I have the data in this repo and they have a more uniform naming scheme
  - Since they are already high-pass filtered, there is no need to do any background subtraction



  


**** Find the sources in the images
+ For the ground truth we will use the Robberto 2005 data
+ I have copied the source identification script over to [[file:../scripts/find-sources.py]]
+ Trial run with the F631N filter to start with

#+begin_src sh :dir ../data :results verbatim
  python ../scripts/find-sources.py pcmos-f631n_sharp_16.fits 4.0 5.0
#+end_src

#+RESULTS:
: Source list saved to pcmos-f631n_sharp_16-sources-fwhm4.0-thresh5.ecsv
: Region file saved to pcmos-f631n_sharp_16-sources-fwhm4.0-thresh5.reg

+ Repeat for the other filters
#+begin_src sh :dir ../data :results verbatim
  for f in 547m 656n 658n 673n; do 
      python ../scripts/find-sources.py pcmos-f${f}_sharp_16.fits 4.0 5.0
  done
#+end_src

#+RESULTS:
: Source list saved to pcmos-f547m_sharp_16-sources-fwhm4.0-thresh5.ecsv
: Region file saved to pcmos-f547m_sharp_16-sources-fwhm4.0-thresh5.reg
: Source list saved to pcmos-f656n_sharp_16-sources-fwhm4.0-thresh5.ecsv
: Region file saved to pcmos-f656n_sharp_16-sources-fwhm4.0-thresh5.reg
: Source list saved to pcmos-f658n_sharp_16-sources-fwhm4.0-thresh5.ecsv
: Region file saved to pcmos-f658n_sharp_16-sources-fwhm4.0-thresh5.reg
: Source list saved to pcmos-f673n_sharp_16-sources-fwhm4.0-thresh5.ecsv
: Region file saved to pcmos-f673n_sharp_16-sources-fwhm4.0-thresh5.reg

**** Inspect the sources in DS9
- They are sort of OK, but the ACS sources do not do a very good job for the proplyds

**** Match the sources

- I am going to try this in a notebook
- This is now done for f631n and it worked fine
  - See [[file:../notebooks/01-align-PC.py]]
- /BUT/ it turns out that the Ricci coordinates are not good enough, so I will have to set my own coordinates for each source
- However, I will go through the exercise for the remaining filters, since at least it will mean that the image alignment between filters will be correct
  
** DONE Coordinates of the proplyds
CLOSED: [2022-05-31 Tue 09:23]
- It turns out that the OW94 coordinates from SIMBAD are not quite accurate enough
- We could maybe use the Ricci coordinates instead
  - We can still use SIMBAD but using the ~[RRS2008]~ prefix instead
  - No, that does not work. It just uses the Ricci ID to identify the source, but  it
- And now it turns out that these coordinates are not accurate enough either
  - So we are going to have to find the coordinates by hand.
  - Probably nest to use the F547 filter for that
- This is now done for a bunch of proplyds
  - [[file:../data/pcmos-proplyds.reg]]
  - Note that the coordinates are for the PC mosaic, which is still not perfectly aligned with Robberto in some places, especially in the S near 182-413


** DONE Extract the radial profiles
CLOSED: [2022-06-04 Sat 13:20]
- There is a pilot version done in the notebook
  - [[file:../notebooks/00-profiles-PC.py]]
- Next job is to do it for all the filters and sources
  - [[file:../notebooks/02-all-proplyds-PC.py]]
  - Now done with fluxes in detector units
  


** Absolute flux calibration
- I see three possible approaches
  1. Use the photometric keywords in header to get mean flux per angstrom, then multiply by effective width of filter to get the line flux
  2. Use the results from O'Dell & Doi (2004)
  3. Use the MUSE image to get absolute fluxes
- I think 2 would be the easiest, except that *they do not include the F631N filter*
  - In fact they explain why it is problematic to measure 6300 with that filter (weak line, wide filter, strongly influenced by continuum)
  - So, we will try 1 first
  - Although now that I think about it, the MUSE approach might be the easiest
    - We only need to calibrate the BG nebula, which should be easy.
    - Although, we do need to know the effective width of the filter too


** Properties of the WFPC2 filters
- From the Instrument Handbook I get the following
  | Filter | mean wav | width | peak trans | peak wav |  Q Tmax |
  |--------+----------+-------+------------+----------+---------|
  | F631N  |     6306 |  30.9 |       85.7 |     6301 | 0.12632 |
  | F656N  |     6564 |  21.5 |       77.8 |     6562 | 0.11273 |
  | F547M  |     5446 | 486.6 |       91.3 |     5360 | 0.11515 |
  | F673N  |     6732 |  47.2 |       87.0 |     6732 | 0.11978 |
  | F658N  |     6591 |  28.5 |       79.7 |     6591 | 0.11443 |
- For strong lines we can use equation 6.4 of the Instrument Handbook, which gives the count rate for an emission line source as R = 2.3e12 QT F \lambda
  - where QT will be approximately QTmax from the table since the lines wavelength is close to the peak transmission
  - R is in electron/s
  - F is line flux in erg/cm2/s
  - \lambda is line wavelength in \AA
  - They give a worked example for the Ha line:
    - F = 1e-16 erg/cm2/s
    - R = 2.3e12 0.11273 1e-16 6563 = 0.17 elec/s
  - I am not quite sure why the gain does not factor in here. Presumably it is included in the Q factor
- Exposure times according to the headers
  | Filter | Exp time |
  |--------+----------|
  | F631N  |      100 |
  | F656N  |       60 |
  | F547M  |       30 |
  | F673N  |      100 |
  | F658N  |      100 |
  |        |          |
- Back conversion to flux:
  - F = 5.46e-16 R for F631N
  - F = 5.88e-16 R for F656N


** Checking the flux ratio between filters
- For BG near 177-341W we have oi/ha = 1.81/58.77 = 0.0308 from HST
- Meanwhile, from the EW with MUSE we have  6.2/1720 = 3.60e-3
- This is very different, but that must be because of the continuum (39 \AA) and siii (16 \AA)
  - So really should be (6.2 + 16 + 30.9) / (1720 + 21.5) = 0.03
- Amazingly, this is the same!
  - Although I was kind of expecting to have to factor in the exposure times for the PC images


** Absolute fluxes and luminosities from PC images
If we take it seriously, then we have the following
|          |   R |       F | L/Lsun |
|----------+-----+---------+--------|
| 177-341W | 730 | 4.0e-13 | 2.1e-3 |
|  182-413 | 338 | 1.8e-13 | 9.5e-4 |
#+TBLFM: $3=5.46e-16 $2;s2::$4=$3 4 $pi 410**2 $pc**2 / $lsun ; s2

** Comparing with Bally 1998

** Issue of [S III] 6312 line
- This has almost the same transmission as 6300 through the F631N filter
- So its relative importance will depend on its EW
- We can check this using the MUSE images


** What we have learnt from the MUSE maps
- The EW of 6300 is very low in the nebula when one is away from filaments, shocks, and proplyds
  - Typically 3 to 10 \AA, which is much smaller than the filter width of 31 \AA
  - This means that the BG is mainly continuum (and siii, see below)
- The EW of 6312 is 15 to 20 \AA in the nebula around the proplyds, so this line makes a moderate contribution to the BG
- EW of 6300 increases in those proplyds that do not harbor bright stars
  - It reaches 50 \AA in 177-341, which means the line dominates the filter there
  - Some of the increase is near the proplyd i-front, but the peak seems to be centered on the star
  - I suppose we might need to worry about chromospheric emission at some point
