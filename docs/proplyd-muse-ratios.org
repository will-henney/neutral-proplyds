* Line ratios for proplyds from MUSE maps
+ This needn't just be proplyds, but may include the nebula too, and HH objects
** [O I] 5577 line
- Needs the sky to be removed panel by panel
  - Similarly to how I dealt with the O II 7773 line

*** Sky removal for 5577

**** DONE Copy line map file from external SSD
CLOSED: [2022-04-09 Sat 22:19]
#+begin_src sh :results verbatim :dir ..
  FROM=/Volumes/SSD-2TB/OrionMuse/LineMaps
  TO=data/muse

  rsync -avP $FROM/linesum-O_I-5577.fits $TO
#+end_src

#+RESULTS:
: sending incremental file list
: 
: sent 69 bytes  received 12 bytes  162.00 bytes/sec
: total size is 10,431,360  speedup is 128,782.22

**** DONE Do histograms of brightness in each tile
CLOSED: [2022-04-10 Sun 00:33]
#+BEGIN_SRC python :eval no :tangle ../scripts/sky-tile-hist.py
  import sys
  import os
  import numpy as np
  from astropy.io import fits
  from astropy.modeling import models, fitting
  from matplotlib import pyplot as plt
  import seaborn as sns

  try: 
      infile = sys.argv[1]
  except:
      sys.exit('Usage: {} FITSFILE'.format(sys.argv[0]))


  basename = os.path.basename(infile)
  baseroot, _ = os.path.splitext(basename)
  figfile = f"{sys.argv[0]}-{baseroot}.pdf"

  hdu = fits.open(infile)[0]
  if hdu.data is None:
      hdu = fits.open(infile)[1]
  hdr = hdu.header

  ny, nx = hdu.data.shape

  # Size of chunks
  mx, my = 290, 290
  xchunks, ychunks = nx//mx, ny//my


  fig, axes = plt.subplots(ychunks, xchunks,
                           sharex=True, sharey=True,
                           figsize=(10, 10),
  )


  hdu.data /= 1000.0

  m = np.isfinite(hdu.data)
  vmin, vmax = np.percentile(hdu.data[m], [1.0, 99.0])
  vrange = vmax - vmin
  vmin -= 0.3*vrange
  vmax += 0.3*vrange

  m = m & (hdu.data >= vmin) & (hdu.data <= vmax)

  fitter = fitting.LevMarLSQFitter()
  for jchunk in range(ychunks):
      yslice = slice(jchunk*my, jchunk*my + my)
      for ichunk in range(xchunks):
          xslice = slice(ichunk*mx, ichunk*mx + mx)

          mm = m[yslice, xslice]
          tile = hdu.data[yslice, xslice][mm]
          ax = axes[ychunks - jchunk - 1, ichunk]
          hist, edges, _ = ax.hist(tile, bins=100, range=[vmin, vmax])
          centers = 0.5*(edges[:-1] + edges[1:])


          a0 = hist.max()
          v0 = np.mean(tile)
          vmedian = np.median(tile)
          s0 = np.std(tile)
          g_init = models.Gaussian1D(amplitude=a0, mean=v0, stddev=s0)
          select = hist > 0.3*a0
          g = fitter(g_init, centers[select], hist[select])
          ax.plot(centers, g(centers), c='r', lw=0.5)
          # ax.plot(centers, g_init(centers), c='g')

          ax.axvline(0.0, c='k', alpha=0.5)
          ax.axvline(vmedian, c='r', alpha=1.0)

          s = f"peak = {g.mean.value:.2f}\nstd = {g.stddev.value:.2f}"
          ax.text(0.95, 0.95, s,
                  ha='right', va='top',
                  fontsize='xx-small',
                  transform=ax.transAxes)

  fig.savefig(figfile)
  print(figfile, end='')
#+END_SRC

#+BEGIN_SRC sh :results file :dir ..
python scripts/sky-tile-hist.py data/muse/linesum-O_I-5577.fits
#+END_SRC

#+RESULTS:
[[file:scripts/sky-tile-hist.py-linesum-O_I-5577.pdf]]

**** DONE Remove the sky and save a corrected file
CLOSED: [2022-04-10 Sun 00:33]
- Top row are all the same except the last one, which is lower
- Second row, first four go up linearly, then drop to last two
- Third row, first higher, then all lower
- Fourth row, higher again


#+name: sky-tiles-5577
| 10.85 | 10.85 | 10.85 | 10.85 | 10.85 | 10.11 |
|   9.6 |   9.9 |  10.4 |  10.9 |   9.9 |   9.9 |
|   8.5 |   8.3 |   8.3 |   8.3 |   8.3 |   7.9 |
|   9.4 |   9.7 |   9.5 |   8.9 |   8.9 |   9.2 |
|  10.2 |  10.2 |   9.8 |   9.8 |   9.8 |   9.8 |

#+header: :var skytab=sky-tiles-5577 mapname="linesum-O_I-5577"
#+BEGIN_SRC python
  import numpy as np
  from astropy.io import fits

  infile = f"../data/muse/{mapname}.fits"

  hdu = fits.open(infile)[0]
  if hdu.data is None:
      hdu = fits.open(infile)[1]
  hdr = hdu.header

  ny, nx = hdu.data.shape

  # Size of chunks
  mx, my = 292, 292
  xchunks, ychunks = nx//mx, ny//my
  # Margin of unused pixels
  marginx, marginy = 4, 2

  for jchunk in range(ychunks):
      yslice = slice(jchunk*my + marginy, jchunk*my + marginy + my)
      for ichunk in range(xchunks):
          xslice = slice(ichunk*mx + marginx, ichunk*mx + marginx + mx)
          skylevel = 1000.0*skytab[ychunks - jchunk - 1][ichunk]
          hdu.data[yslice, xslice] -= skylevel

  # Mask out scar artefacts
  # hdu.data[292:302, 580:] = np.nan
  # hdu.data[870:877, 300:1380] = np.nan

  hdu.writeto(infile.replace('.fits', '-nosky.fits'), overwrite=True)
#+END_SRC

#+RESULTS:
: None

*** TODO Nebular emission of 5577
- How does it compare with 6300?
  - ratio near brightness peak is about 0.015
  - ratio at hh 201 is 0.01, but that may  be heavily reddened
- Can we measure a temperature?
  - need to de-redden at least with the foreground
  - and then compare with PyNeb


*** Calculate T from 5577/6300 ratio using pyneb

- Assume density of 1e4, although low density limit is only 2% different
- Look at line ratios between 0.01 and 0.025
#+begin_src python :results output verbatim
  import numpy as np
  import pyneb as pn

  oi = pn.Atom("o", 1)
  print(
      oi.getTemDen(
          [0.01, 0.015, 0.02, 0.025],
          den=10000.,
          wave1=5577,
          wave2=6300,
      )
  )
  print(
      oi.getCritDensity([300, 1000, 3000, 1e4], 4) / 1e6
  )
  print(
      oi.getCritDensity([300, 1000, 3000, 1e4], 5) / 1e6
  )


#+end_src

#+RESULTS:
: [ 7749.10315973  8739.28995845  9616.82836919 10522.85809857]
: [0.64448614 1.17666532 2.03780737 1.53064331]
: [27.97285258 51.07120786 88.45792681 95.391892  ]
- This shows that the temperature near the brightness peak is about 8700 K
  - although still need to correct for reddening,  which would put the T up a bit
  - The reddening from the Balmer decrement should be a lower limit to the reddening to the ionization front
- I also print the critical electron density for the 6300 and 5577 lines, in units of 1e6 pcc
*** Collisional excitation/deexcitation of 6300 by neutral H atoms
- see Krems:2006d
- De-excitation rate is 1e-12 cm^3/s
- A-value is 6.478e-03 /s
- n crit = A / q = 6.478e-03 / 1e-12 = 6.5e9 /cm^3
*** Non-collisional excitation of the 5577 line
- Table of energy levels for O I from NIST
  - https://physics.nist.gov/PhysRefData/Handbook/Tables/oxygentable5.htm
- Forbidden lines are between levels of the ground configuration: 2s2.2p4
  - .^{3}P ground
    - .^{3}P_2 (E = 0)
    - .^{3}P_1 (158.265 cm^-1)
    - .^{3}P_0 (226.977 cm^-1)
    - Transitions between sub-levels give 63 micron (.^{3}P_1 \to .^{3}P_2) and 157 micron (.^{3}P_0 \to .^{3}P_1) far-infrared lines
  - .^{1}D first excited (15867.862 cm^-1)
    - .^{1}D_2 -> .^{3}P_1 is 6363 \AA
    - .^{1}D_2 -> .^{3}P_2 is 6300 \AA
  - .^{1}S second excited (33792.583 cm^-1)
    - .^{1}S_0 \to .^{1}D_2 is 5577 \AA
    - .^{1}S_0 \to .^{3}P_2 is 2959 \AA (vac)
- In my Orion Raman notes, I mentioned possible fluorescent radiative pumping of the forbidden lines
  - The route is via weak inter-combination transitions from the 3d .^{3}D term to 2s2.2p4 .^{1}D and .^{1}S 
  - Branching ratio of each is only 1e-05 compared with branching ratio of 0.275 to 3p .^{3}P, which is upper level of 8447 \AA line
  - This means that this mechanism *cannot be important*
    - We would get F(\lambda{}6300)/F(\lambda{}8447) < 1e-4 from this mechanism
- Possible dissociation pumping of 5577
  - van Dishoek 1983JChPh..79..873V seems the best reference
  - Summary of results for dissociation rates in optically thin cloud exposed to the interstellar radiation field
    : The photodissociation rate is 4.6 x 10^-10 /s if the maximum
    : contribution of the bound states is used and 3.6 x 10^-10 /s if the
    : estimated dissociation efficiencies are adopted. About 45% of the
    : dissociations lead to O(3P) + H, about 50% to O(1D) + H and about 5%
    : to O(1S) + H.
  - This implies that the flux ratio of F(\lambda{}5577)/F(\lambda{}6300) = (5 / 50) (6300 / 5577) = 0.113 for the dissociation pumped component.
    - This is 8 times higher than the ratio we get from collisional excitation
    - But it would be reduced slightly by the extra reddening down to the disk surface
    - However, it might be increased if the dissociation channel via  2(B) .^{2}\Sigma^{+} were enhanced, which would be the case for a FUV spectrum that was not so soft as the ISRF *see below*
  - For the total dissociation rate, the UMIST network uses 3.5e-10, which is very similar to van Dishoek's value.
  - Further details
    - The .^{1}S O^0 state comes from dissociation via the 2(B) .^{2}\Sigma^{+} molecular OH state
      - Peak x-section at 11 eV
    - The .^{1}D O^0 state comes from dissociation via the following OH states:
      - 1(A) .^{2}\Sigma^{+} (probably unimportant unless spectrum is very soft)
      - 1 .^{2}\Delta: peak x-section at 9 eV
      - 2 .^{2}\Pi: sharp peak at 10 ev
    - In the presence of strong Ly alpha, the 1 .^{2}\Delta and 2(B) .^{2}\Sigma^+ channels will be favored since they have significant cross section at 10 ev

** Other lines
- oi 6300, 
- oi 8446
- ni 5199
- oii 7330
- ci 8727
- feii 8617, 7155
